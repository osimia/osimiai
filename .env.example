# Копируйте этот файл как .env и заполните значения
DJANGO_SECRET_KEY=change-me
DJANGO_DEBUG=false
# Для Railway добавьте домен проекта; для поддоменов используйте префикс с точкой
# Пример корректного шаблона: .up.railway.app (а НЕ *.up.railway.app)
ALLOWED_HOSTS=localhost,127.0.0.1,.up.railway.app
CSRF_TRUSTED_ORIGINS=https://*.up.railway.app

########################################
# База данных
########################################
# По умолчанию локально используем SQLite
DB_ENGINE=django.db.backends.sqlite3
DB_NAME=db.sqlite3

# PostgreSQL (пример для Cloud SQL) - override при деплое в GCP
# DB_ENGINE=django.db.backends.postgresql
# DB_NAME=postgres
# DB_USER=postgres
# DB_PASSWORD=your-password
# DB_HOST=  # leave empty on Cloud Run to use unix socket
# DB_PORT=5432
# INSTANCE_CONNECTION_NAME=project:region:instance

########################################
# Railway
########################################
# На Railway обычно предоставляется DATABASE_URL вида:
# postgresql://user:password@host:port/db
# Если задать переменную DATABASE_URL — она переопределит настройки БД выше
# DATABASE_URL=

########################################
# Google Cloud Storage (django-storages)
########################################
# Включить GCS для статики и медиа
# USE_GCS=true
# Имя бакета GCS
# GS_BUCKET_NAME=your-bucket
# Способ 1: Указать JSON ключа сервис-аккаунта прямо в переменной
# GOOGLE_APPLICATION_CREDENTIALS_JSON={"type":"service_account", ...}
# Способ 2: Указать путь к файлу с ключом (на Railway обычно не используется)
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/sa.json

########################################
# Selectel S3-совместимое хранилище
########################################
# Включить S3-хранилище (Selectel)
# USE_S3=true
# Имя бакета
# AWS_STORAGE_BUCKET_NAME=legalai
# Endpoint Selectel (HTTPs)
# S3_ENDPOINT_URL=https://s3.ru-1.storage.selcloud.ru
# Регион
# S3_REGION_NAME=ru-1
# Ключи доступа (создайте в панели Selectel → S3-ключи)
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# Доп. настройки (обычно по умолчанию достаточно)
# AWS_S3_ADDRESSING_STYLE=virtual
# AWS_S3_SIGNATURE_VERSION=s3v4
# AWS_S3_VERIFY=true

########################################
# WhiteNoise (используйте, если не применяете GCS)
########################################
# Для Railway без GCS удобно включить WhiteNoise, чтобы обслуживать статику
USE_WHITENOISE=true

########################################
# Chroma DB
########################################
# Путь для локального сохранения ChromaDB
CHROMA_DB_PATH=chroma_db

# Пример DATABASE_URL (Railway):
# DATABASE_URL=postgresql://postgres:your-postgres-password@caboose.proxy.rlwy.net:50245/railway
# Уберите/закомментируйте DATABASE_URL, чтобы использовать SQLite локально

########################################
# Google Gemini
########################################
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_MODEL=gemini-1.5-flash

# For GitHub Actions (set as repository secrets, not in .env):
# GCP_PROJECT_ID=
# GCP_REGION=
# ARTIFACT_REGISTRY=us-central1-docker.pkg.dev
# CLOUD_RUN_SERVICE=legalai
# SERVICE_ACCOUNT_EMAIL=cloud-run-deployer@<project>.iam.gserviceaccount.com
# WORKLOAD_IDENTITY_PROVIDER=projects/<num>/locations/global/workloadIdentityPools/<pool>/providers/<provider>
# ALLOWED_HOSTS=your-cloud-run-url.a.run.app
# CSRF_TRUSTED_ORIGINS=https://your-cloud-run-url.a.run.app